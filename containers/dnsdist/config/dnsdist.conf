-- udp/tcp dns listening
setLocal("0.0.0.0:53", {})

-- local Bind
newServer({
  address = "172.16.16.3",
  pool = "bind",
  checkName = "ns.monosense.io"
})

-- Local AdGuard Home
newServer({
  address = "172.16.16.2",
  useClientSubnet = true,
  pool = "adguard"
})
-- ECS will pass through requester IP to AdGuard Home
setECSOverride(true)
setECSSourcePrefixV4(32)

-- CloudFlare DNS over TLS
newServer({
  address = "1.1.1.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})
newServer({
  address = "1.0.0.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})

-- Enable caching
pc = newPacketCache(10000, {
  maxTTL = 86400,
  minTTL = 0,
  temporaryFailureTTL = 60,
  staleTTL = 60,
  dontAge = false
})
getPool(""):setCache(pc)

-- Request logging, uncomment to log DNS requests/responses to stdout
-- addAction(AllRule(), LogAction("", false, false, true, false, false))
-- addResponseAction(AllRule(), LogResponseAction("", false, true, false, false))

-- Routing rules
addAction("172.16.13.0/24", PoolAction("cloudflare"))     -- IOT VLAN
addAction("172.16.13.0/24", DropAction())                 -- stop processing
addAction("172.16.14.0/24", PoolAction("cloudflare"))     -- CCTV VLAN
addAction("172.16.14.0/24", DropAction())                 -- stop processing

addAction('monosense.io', PoolAction('bind'))
addAction('16.172.in-addr.arpa', PoolAction('bind'))

addAction("172.16.10.0/24", PoolAction("adguard"))          -- MGMT
addAction("172.16.11.0/24", PoolAction("adguard"))          -- INFRA
addAction("172.16.12.0/24", PoolAction("adguard"))          -- HOME
-- addAction("10.10.0.0/24", PoolAction("adguard"))         -- WireGuard clients
