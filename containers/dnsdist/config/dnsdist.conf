-- udp/tcp dns listening
setLocal("0.0.0.0:53", {})

-- local Bind
newServer({
  address = "10.5.0.3",
  pool = "bind",
  checkName = "gateway.home.arpa"
})

-- Local AdGuard Home
newServer({
  address = "10.5.0.4",
  useClientSubnet = true,
  pool = "adguard"
})
-- ECS will pass through requester IP to AdGuard Home
setECSOverride()
setECSSourcePrefixV4(32)

-- CloudFlare DNS over TLS
newServer({
  address = "1.1.1.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})
newServer({
  address = "1.0.0.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})

-- Enable caching
pc = newPacketCache(10000, {
  maxTTL = 86400,
  minTTL = 0,
  temporaryFailureTTL = 60,
  staleTTL = 60,
  dontAge = false
})
getPool(""):setCache(pc)

-- Request logging, uncomment to log DNS requests/responses to stdout
-- addAction(AllRule(), LogAction("", false, false, true, false, false))
-- addResponseAction(AllRule(), LogResponseAction("", false, true, false, false))

-- Routing rules
addAction("192.168.69.0/24", PoolAction("cloudflare"))      -- IOT VLAN
addAction("192.168.69.0/24", DropAction())                  -- stop processing
addAction("192.168.250.0/24", PoolAction("cloudflare"))     -- GUEST VLAN
addAction("192.168.250.0/24", DropAction())                 -- stop processing

addAction('home.arpa', PoolAction('bind'))
addAction('168.192.in-addr.arpa', PoolAction('bind'))
addAction('10.in-addr.arpa', PoolAction('bind'))

addAction("192.168.10.0/24", PoolAction("adguard"))         -- LAN1
addAction("192.168.200.0/24", PoolAction("adguard"))        -- SERVER VLAN
addAction("10.10.0.0/24", PoolAction("adguard"))            -- WireGuard clients
